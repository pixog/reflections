What happens when you initialize a repository? Why do you need to do it?
-Git creates all the necessary backend files (repository) in order to track your commits

How is the staging area different from the working directory and the repository? What value do you think it offers?
-Stores only the files for the next commit. Useful because you can customize your commits to only include logically related files.

How can you use the staging area to make sure you have one commit per logical change?
-Only add files that include changes related to one logical change...

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
-Languages and experiments. Naming branches makes it easy to locate and track.

How do the diagrams help you visualize the branch structure?
-Helps to see where things are and where they are/are not accessible

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
-Merges new code from both branches into one. 

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
-Pros: Does most work for you. 
-Cons: Potential danger in automation. Takes time to talk to someone else and find out what changes they made and why before finishing merge


